package com.mycompany.dropnumbergame;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;

/**
 *
 * @author Zeynep Nursena
 */
public class Test extends javax.swing.JFrame {

    MultiLinkedList<Node, Integer> liste;
    int[][] guiMatrisi;
    int indeks = 0;
    int[][] sequence = {{2, 0}, {2, 3}, {4, 1}, {2, 2}, {4, 4},
    {2, 1}, {4, 4}, {8, 0}, {8, 0}, {32, 1},
    {2, 2}, {64, 2}, {16, 3}, {64, 1}, {32, 2},
    {16, 0}, {16, 4}, {32, 2}, {64, 1}, {8, 3}, {4, 3},
    {2, 3}, {2, 3}, {2, 1}, {64, 2}, {32, 2},
    {16, 2}, {8, 2}, {8, 2}, {4, 1}, {8, 1}};

    /**
     * Creates new form Test
     */
    public Test() {

        initComponents();
        liste = new MultiLinkedList<>();
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
       

        Graphics2D g2 = (Graphics2D) g;
        if (guiMatrisi != null) {
            for (int i = 0; i < 7; i++) {
                for (int j = 0; j < 5; j++) {
                    g2.drawRect(j * 50 + 100, i * 50 + 100, 50, 50);
                    g2.drawString(guiMatrisi[i][j] + "", j * 50 + 125, (6 - i) * 50 + 125);
                }
            }
        }
        
        //g2.fillRect(WIDTH, WIDTH, WIDTH, HEIGHT);
        //g2.setColor(Color.red);

    }

    public void print(MultiLinkedList m) {
        int[][] matrix = new int[7][5];
        int row;
        Node LeftFirstHeadOfColumn = m.start;

        while (LeftFirstHeadOfColumn != null) {
            Node UpHeadOfColumn = LeftFirstHeadOfColumn;
            row = 0;
            while (UpHeadOfColumn != null) {
                matrix[row][UpHeadOfColumn.getCol()] = UpHeadOfColumn.getValue().intValue();
                UpHeadOfColumn = UpHeadOfColumn.getUp();
                row++;
            }
            LeftFirstHeadOfColumn = LeftFirstHeadOfColumn.getRight();
        }

        for (int i = matrix.length - 1; i >= 0; i--) {
            for (int j = 0; j < matrix[0].length; j++) {
                System.out.print(matrix[i][j] + "    ");
            }
            System.out.println("");
        }
        System.out.println();

        guiMatrisi = matrix;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.lightGray);
        setForeground(java.awt.Color.black);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        liste.add(sequence[indeks][0], sequence[indeks][1]);
        print(liste);
        indeks++;
        repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Test().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
